name: Memory Profile

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'doc/**'
      - '**.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'doc/**'
      - '**.md'
  workflow_dispatch:

jobs:
  memory-profile:
    name: Memory Profile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get Valgrind
        run: |
          sudo apt-get install -y valgrind
          valgrind --version

      - name: Setup MPI ${{ matrix.mpi_compiler }} environment
        uses: mpi4py/setup-mpi@v1
        with:
          mpi: ${{ matrix.mpi_compiler }}

      - name: Setup Python ${{ matrix.python_version }} environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          cache: 'pip'
      - run: |
          python -m pip install --upgrade pip
          pip install numpy

      - name: Install other dependencies
        run: |
          sudo apt-get install -y libreadline-dev

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=build-memprof" >> "$GITHUB_OUTPUT"

      - name: Configure CMake (-DLIBYT_RUN_MEMORY_PROFILE=ON)
        run: |
          cd ${{ github.workspace }}
          rm -rf ${{ steps.strings.outputs.build-output-dir }}
          cmake -DLIBYT_RUN_MEMORY_PROFILE=ON -B ${{ steps.strings.outputs.build-output-dir }} -S .

      - name: Build
        run: |
          cd ${{ github.workspace }}
          cmake --build ${{ steps.strings.outputs.build-output-dir }}

      - name: Run memory profile using valgrind massif
        working-directory: ${{ github.workspace }}/${{ steps.strings.outputs.build-output-dir }}/test/memory_profile
        run: |
          valgrind -v --tool=massif --stacks=yes ./MemoryProfile